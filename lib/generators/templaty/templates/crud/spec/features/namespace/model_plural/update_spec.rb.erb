<%- params = Templaty::Params.new(options) -%>
<%- data = Templaty::Helper.data_for(options) -%>
<%- data_as_hash_string_raw = Templaty::Helper.data_as_hash_string(data, value_attribute: :raw) -%>


# frozen_string_literal: true

require 'support/capybara_box'
require 'support/factory_bot'

RSpec.describe <%= params.model_class %>, '#update', :js do
  let!(:profile) { create_profile(with_plan: true) }
  let!(:<%= params.raw.model.name %>) { create(:<%= params.raw.model.name %>, <%= data_as_hash_string_raw %>, unit: profile.unit) }

  it 'updates record' do
    login profile.user,
      permissions: [['<%= params.controller_path %>', :update], ['<%= params.controller_path %>', :index]],
      redirect_to: edit_<%= params.raw.namespace %>_<%= params.raw.model.name %>_path(<%= params.raw.model.name %>)

    <%- params.raw.model.fields.each do |field| -%>
    fill_in '<%= params.raw.model.name %>_<%= field.name %>', with: '<%= data[field][:formatted] %>'
    <%- end -%>

    click_button('Salvar')

    expect(page).to have_text('<%= params.model_class %> <%= params.i18n_updated %> com sucesso.')

    visit edit_<%= params.raw.namespace %>_<%= params.raw.model.name %>_path(<%= params.raw.model.name %>.reload)

    <%- params.raw.model.fields.each do |field| -%>
    expect(page).to have_field('<%= params.raw.model.name %>_<%= field.name %>', with: '<%= data[field][:formatted] %>')
    <%- end -%>
  end
end
