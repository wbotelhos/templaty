<%- params = Templaty::Params.new(options) -%>
# frozen_string_literal: true

<%- if params.model_namespace_class -%>
module <%= params.model_namespace_class %>
<%- end -%>
class <%= params.model_unamespaced_class %> < ApplicationRecord
  <%- if params.searchable? -%>
  include PgSearch::Model
  <%- end -%>

  idy

  <%- params.raw.model.fields.each do |field| -%>
  <%- if field.type == 'textarea' -%>
  normalizy :<%= field.name %>, with: :strip
  <%- elsif field.name.end_with?('_cents') -%>
  normalizy :<%= field.name %>, with: { money: { type: :cents } }
  <%- elsif field.name.end_with?('_percent') || field.name == 'percentage' -%>
  normalizy :<%= field.name %>, with: { money: { type: :cents } }
  <%- else -%>
  normalizy :<%= field.name %>, with: :squish
  <%- end -%>
  <%- end -%>

  <%- if params.searchable? -%>
  pg_search_scope :list,
    against: %i[<%= params.searchable_fields_spaced %>],
    ignoring: :accents,
    using: { tsearch: { prefix: true } }

  <%- end -%>
  <%- params.belongs_to_fields.each do |field| -%>
  belongs_to :<%= field.name %><%= field.counter_cache? ? ', counter_cache: true' : nil -%><%= field.optional? ? ', optional: true' : nil -%>
  <%- end -%>

  <%- params.presence_fields.each do |field| -%>
  validates :<%= field.name %>, presence: true
  <%- end -%>

  <%- params.unique_fields.each do |field| -%>
  validates :<%= field.name %>, uniqueness: { case_sensitive: false<%= !field.unique.scope.empty? ? ", scope: :#{field.unique.scope}" : nil -%> }
  <%- end -%>

  <%- params.numeric_fields.each do |field| -%>
  validates :<%= field.name %>, numericality: {
    greater_than_or_equal_to: <%= field.min %>,
    less_than_or_equal_to: <%= field.max %>,
  }
  <%- end -%>
end
<%- if params.model_namespace_class -%>
end
<%- end -%>
